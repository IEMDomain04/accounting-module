import React, { useState, useEffect } from "react";
import "./ModalInput.css";
import Forms from "./Forms";
import Dropdown from "./Dropdown";
import Button from "../components/Button";
import { accounts } from "../submodules/ListOfAccounts";
import { accountCodeMapping } from "../submodules/AccountMapping"; // Import the mapping

const CoaModalInput = ({ isModalOpen, closeModal, coaForm, handleInputChange, handleSubmit }) => {
    const [selectedAccount, setSelectedAccount] = useState("");

    // Generate full account code based on account name
    const generateAccountCode = (accountName) => {
        const baseCode = accountCodeMapping[accountName]; // Look up the mapping
        if (!baseCode) return ""; // Return empty if no mapping is found
        return `ACC-COA-2025-${baseCode}`; // Combine with prefix
    };

    // Update the account code whenever the account name changes
    useEffect(() => {
        if (coaForm.account_name) {
            const autoGeneratedCode = generateAccountCode(coaForm.account_name);
            handleInputChange("account_code", autoGeneratedCode);
        }
    }, [coaForm.account_name]); // Re-run effect when account name changes

    return (
        <div>
            {isModalOpen && (
                <div className="modal-overlay">
                    <div className="modal-container">
                        <div className="modal-header">
                            <h2>Creating Account</h2>
                            <img
                                className="cursor-pointer hover:scale-110"
                                src="./accounting/Close.svg"
                                alt="x button"
                                onClick={closeModal}
                            />
                        </div>

                        <div className="modal-body">
                            {/* Account Name Input */}
                            <Forms
                                type="text"
                                formName="Account Name*"
                                placeholder="Enter account name"
                                value={coaForm.account_name}
                                onChange={(e) => handleInputChange("account_name", e.target.value)}
                            />

                            {/* Auto-Generated Account Code (Read-Only) */}
                            <Forms
                                type="text"
                                formName="Account Code*"
                                placeholder="Auto-generated account code"
                                value={coaForm.account_code}
                                readOnly
                            />

                            <div className="flex gap-x-5 max-sm:flex-col max-sm:gap-3">
                                {/* Account Dropdown */}
                                <div className="flex flex-col gap-y-1">
                                    <label> Select Account*</label>
                                    <Dropdown
                                        options={accounts}
                                        style="selection"
                                        defaultOption="Select account..."
                                        value={selectedAccount}
                                        onChange={(value) => {
                                            setSelectedAccount(value);
                                            handleInputChange("account_type", value);
                                        }}
                                    />
                                </div>
                            </div>
                        </div>

                        <div className="modal-footer">
                            <Button name="Cancel" variant="standard1" onclick={closeModal} />
                            <Button name="Add Account" variant="standard2" onclick={handleSubmit} />
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default CoaModalInput;